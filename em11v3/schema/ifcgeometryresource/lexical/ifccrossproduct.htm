<!DOCTYPE HTML>

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <link rel="stylesheet" type="text/css" href="../../../ifc-styles.css">

    <link rel="stylesheet" type="text/css" href="../../../details-shim.css">
    <script type="text/javascript" src="../../../details-shim.js"></script>
    <title>IfcCrossProduct</title>

    <style type="text/css">
      body { counter-reset: index1 8 index2 4 index3 4 index4 3 index5 0; }
    </style>
  </head>

  <body>


<script type="text/javascript">
<!--
    parent.index.location.replace("../../toc-8.htm#8.4.4.4");
//-->
</script>

<h4 class="num">IfcCrossProduct</h4>
<section>
<h5 class="num">Semantic definitions at the function</h5>
<details open="open"><summary>Function Definition</summary><p>

<p><u>Definition from ISO/CD 10303-42:1992</u>: This
function returns the vector (or cross) product of two input directions.
The input directions must be three-dimensional. The result is always a
vector which is unitless. If the input directions are either parallel
or anti-parallel a vector of zero magnitude is returned.</p>
<blockquote> <small><font color="#0000ff">NOTE
&nbsp;Corresponding STEP function: cross_product. Please refer
to ISO/IS
10303-42:1994, p.103 for the final definition of the formal
standard.&nbsp; <br>
  <br>
HISTORY&nbsp; New function in IFC Release 1.5 </font></small>
</blockquote></p>
</details>
</section>
<section>
<h5 class="num">Formal representations</h5>
<details open="open"><summary>EXPRESS Specification</summary><span class="express">

<p>
<span class="keyword">FUNCTION</span> IfcCrossProduct<br/>

&nbsp;&nbsp;(Arg1, Arg2 : IfcDirection) <br/>&nbsp;&nbsp;&nbsp;&nbsp;: IfcVector;<br/>LOCAL<br/>&nbsp;&nbsp;Mag : REAL;<br/>&nbsp;&nbsp;Res : IfcDirection;<br/>&nbsp;&nbsp;V1,V2&nbsp;&nbsp;: LIST[3:3] OF REAL;<br/>&nbsp;&nbsp;Result : IfcVector;<br/>END_LOCAL;<br/><br/>&nbsp;&nbsp;IF (NOT EXISTS (Arg1) OR (Arg1.Dim = 2)) OR (NOT EXISTS (Arg2) OR (Arg2.Dim = 2)) THEN<br/>&nbsp;&nbsp;&nbsp;&nbsp;RETURN(?);<br/>&nbsp;&nbsp;ELSE<br/>&nbsp;&nbsp;&nbsp;&nbsp;BEGIN<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V1&nbsp;&nbsp;:= IfcNormalise(Arg1).DirectionRatios;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V2&nbsp;&nbsp;:= IfcNormalise(Arg2).DirectionRatios;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Res := IfcRepresentationItem() || IfcGeometricRepresentationItem () <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || IfcDirection([(V1[2]*V2[3] - V1[3]*V2[2]), (V1[3]*V2[1] - V1[1]*V2[3]), (V1[1]*V2[2] - V1[2]*V2[1])]);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mag := 0.0;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;REPEAT i := 1 TO 3;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mag := Mag + Res.DirectionRatios[i]*Res.DirectionRatios[i];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;END_REPEAT;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IF (Mag &gt; 0.0) THEN<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Res, SQRT(Mag));<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELSE<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Arg1, 0.0);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;END_IF;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RETURN(Result);<br/>&nbsp;&nbsp;&nbsp;&nbsp;END;<br/>&nbsp;&nbsp;END_IF;
<br/>

<span class="keyword">END_FUNCTION</span>;

</p>

</span>

</details>
</section>
<p><a href="../../../link/ifccrossproduct.htm" target="_top" ><img src="../../../img/permlink.png" style="border: 0px" title="Link to this page" alt="Link to this page"/>&nbsp; Link to this page</a></p>
<p></p>
  </body>
</html>
